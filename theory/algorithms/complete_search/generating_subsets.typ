
== Generating Subsets

Возьмем множество {0, 1, 2} как же создать все его подмножества?

Перейдем к алгоритмам.

*Method 1*

Весьма интересный способ - это использование рекурсии:

#rect(
  ```cpp
  void search(int k) {
    if (k == n) {
      // process subset
    } else {
      search(k+1);
      subset.push_back(k);
      search(k+1);
      subset.pop_back();
    }
  }
  ```
)

Алгоритм на словах: начинаем с 0, затем если n не конечный, запускаем два серча, один без добавления в подмножество, другой с добавлением в итоге получим все подмножества:

#figure(
  image("../../images/subsets.png", width: 90%),
  caption: [схема алгоритма]
)

  
*Method 2*:

Следующий метод заключается, в битовом представлении целого числа. Каждое подмножество можно представить как множество n битов числа от 0 до 2^n-1. Например 11001 - {0, 3, 4}.

#rect(
  ```cpp
  for (int b=0; b<(1<<n); b++) {
    vector<int> subset;
    for (int i=0; i<n; i++) {
      if (b&(1<<i))
        subset.push_back(i);
    }
  }
  ```
)