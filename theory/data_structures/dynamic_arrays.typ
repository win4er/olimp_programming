#import "../template.typ": *

== Dynamic arrays
Их идея очень проста, вместо статического массива с фиксированной длиной мы используем массив переменной длины. Это удобно тк не всегда удобно работать со статическим массивом, тем более когда его надо обработать. Наиболее популярный динамический массив в C++ это vector:

#rect(
```cpp
vector<int> v;
v.push_back(3); // [3]
v.push_back(2); // [3, 2]
v.push_back(5); // [3, 2, 4]
```)
Вывод чисел аналогичен привычному:
#rect(
```cpp
cout << v[0] << "\n"; // 3
cout << v[1] << "\n"; // 2
cout << v[2] << "\n"; // 5
```)

Также у вектора есть удобный метод size():
#rect(
```cpp
for (int i=0; i<v.size(); ++i) {
  cout << v[i] << "\n";
}
```)
#infoblock[Но не забываем про v.at()]

Но последние стандарты C++ позволяют упростить вывод чисел:
```cpp
for (auto x : v) {
  cout << x << "\n";
}
```
Есть и другие интересные методы у vector, быть может потом напишу про них.
