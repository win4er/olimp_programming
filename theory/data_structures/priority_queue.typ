#import "../template.typ": *

== Priority Queue

Очередь с приоритетом это мультимножество(или множество), которое поддерживает вставку, а также извлечение и удаление минимального или максимального элемента(в зависимости от очереди). Вставка и удаление занимают O(log n), а извлечение O(1).

Очередь с приоритетом обычно основана на heap structure, а не сбалансированном двоичном дереве, что в разы проще.

По умолчанию, элементы в C++ PQ отсортированы по убыванию, и все же это реально найти и удалить наибольший элемент в очереди. Код ниже это демонстрирует:

#rect(
  ```cpp
  priority_queue<int> q;
  q.push(3);
  q.push(5);
  q.push(7);
  q.push(2);
  cout << q.top() << "\n"; // 7
  q.pop();
  cout << q.top() << "\n"; // 5
  q.pop();;
  q.push(6);
  cout << q.top() << "\n"; // 6
  q.pop();
  ```
)

Для того, чтобы PQ поддерживал поиск и удаление наименьшего элемента, можно сделать следующее:

#rect(
  ```cpp
  priority_queue<int, vector<int>, greater<int>> q;
  ```
)